
.create table DeviceInfoRaw (records:dynamic)

.create-or-alter table DeviceInfoRaw ingestion json mapping 'DeviceInfoRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceInfoRaw policy retention softdelete = 1d

.create table DeviceInfo (Timestamp:datetime,DeviceId:string,DeviceName:string,ClientVersion:string,PublicIP:string,OSArchitecture:string,OSPlatform:string,OSBuild:long,IsAzureADJoined:bool,JoinType:string,AadDeviceId:string,LoggedOnUsers:string,RegistryDeviceTag:string,OSVersion:string,MachineGroup:string,ReportId:long,OnboardingStatus:string,AdditionalFields:string,DeviceCategory:string,DeviceType:string,DeviceSubtype:string,Model:string,Vendor:string,OSDistribution:string,OSVersionInfo:string,MergedDeviceIds:string,MergedToDeviceId:string,IsInternetFacing:bool,SensorHealthState:string,IsExcluded:bool,ExclusionReason:string,ExposureLevel:string,AssetValue:string)

.alter-merge table DeviceInfo policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceInfoExpand {DeviceInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ClientVersion = tostring(events.properties.ClientVersion),PublicIP = tostring(events.properties.PublicIP),OSArchitecture = tostring(events.properties.OSArchitecture),OSPlatform = tostring(events.properties.OSPlatform),OSBuild = tolong(events.properties.OSBuild),IsAzureADJoined = tobool(events.properties.IsAzureADJoined),JoinType = tostring(events.properties.JoinType),AadDeviceId = tostring(events.properties.AadDeviceId),LoggedOnUsers = tostring(events.properties.LoggedOnUsers),RegistryDeviceTag = tostring(events.properties.RegistryDeviceTag),OSVersion = tostring(events.properties.OSVersion),MachineGroup = tostring(events.properties.MachineGroup),ReportId = tolong(events.properties.ReportId),OnboardingStatus = tostring(events.properties.OnboardingStatus),AdditionalFields = tostring(events.properties.AdditionalFields),DeviceCategory = tostring(events.properties.DeviceCategory),DeviceType = tostring(events.properties.DeviceType),DeviceSubtype = tostring(events.properties.DeviceSubtype),Model = tostring(events.properties.Model),Vendor = tostring(events.properties.Vendor),OSDistribution = tostring(events.properties.OSDistribution),OSVersionInfo = tostring(events.properties.OSVersionInfo),MergedDeviceIds = tostring(events.properties.MergedDeviceIds),MergedToDeviceId = tostring(events.properties.MergedToDeviceId),IsInternetFacing = tobool(events.properties.IsInternetFacing),SensorHealthState = tostring(events.properties.SensorHealthState),IsExcluded = tobool(events.properties.IsExcluded),ExclusionReason = tostring(events.properties.ExclusionReason),ExposureLevel = tostring(events.properties.ExposureLevel),AssetValue = tostring(events.properties.AssetValue) }

.alter table DeviceInfo policy update @'[{"Source": "DeviceInfoRaw", "Query": "DeviceInfoExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceNetworkInfoRaw (records:dynamic)

.create-or-alter table DeviceNetworkInfoRaw ingestion json mapping 'DeviceNetworkInfoRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceNetworkInfoRaw policy retention softdelete = 1d

.create table DeviceNetworkInfo (Timestamp:datetime,DeviceId:string,DeviceName:string,NetworkAdapterName:string,MacAddress:string,NetworkAdapterType:string,NetworkAdapterStatus:string,TunnelType:string,ConnectedNetworks:string,DnsAddresses:string,IPv4Dhcp:string,IPv6Dhcp:string,DefaultGateways:string,IPAddresses:string,ReportId:long,NetworkAdapterVendor:string)

.alter-merge table DeviceNetworkInfo policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceNetworkInfoExpand {DeviceNetworkInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),NetworkAdapterName = tostring(events.properties.NetworkAdapterName),MacAddress = tostring(events.properties.MacAddress),NetworkAdapterType = tostring(events.properties.NetworkAdapterType),NetworkAdapterStatus = tostring(events.properties.NetworkAdapterStatus),TunnelType = tostring(events.properties.TunnelType),ConnectedNetworks = tostring(events.properties.ConnectedNetworks),DnsAddresses = tostring(events.properties.DnsAddresses),IPv4Dhcp = tostring(events.properties.IPv4Dhcp),IPv6Dhcp = tostring(events.properties.IPv6Dhcp),DefaultGateways = tostring(events.properties.DefaultGateways),IPAddresses = tostring(events.properties.IPAddresses),ReportId = tolong(events.properties.ReportId),NetworkAdapterVendor = tostring(events.properties.NetworkAdapterVendor) }

.alter table DeviceNetworkInfo policy update @'[{"Source": "DeviceNetworkInfoRaw", "Query": "DeviceNetworkInfoExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceProcessEventsRaw (records:dynamic)

.create-or-alter table DeviceProcessEventsRaw ingestion json mapping 'DeviceProcessEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceProcessEventsRaw policy retention softdelete = 1d

.create table DeviceProcessEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,MD5:string,FileSize:long,ProcessVersionInfoCompanyName:string,ProcessVersionInfoProductName:string,ProcessVersionInfoProductVersion:string,ProcessVersionInfoInternalFileName:string,ProcessVersionInfoOriginalFileName:string,ProcessVersionInfoFileDescription:string,ProcessId:long,ProcessCommandLine:string,ProcessIntegrityLevel:string,ProcessTokenElevation:string,ProcessCreationTime:datetime,AccountDomain:string,AccountName:string,AccountSid:string,AccountUpn:string,AccountObjectId:string,LogonId:long,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessLogonId:long,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,InitiatingProcessSignerType:string,InitiatingProcessSignatureStatus:string,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)

.alter-merge table DeviceProcessEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceProcessEventsExpand {DeviceProcessEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),MD5 = tostring(events.properties.MD5),FileSize = tolong(events.properties.FileSize),ProcessVersionInfoCompanyName = tostring(events.properties.ProcessVersionInfoCompanyName),ProcessVersionInfoProductName = tostring(events.properties.ProcessVersionInfoProductName),ProcessVersionInfoProductVersion = tostring(events.properties.ProcessVersionInfoProductVersion),ProcessVersionInfoInternalFileName = tostring(events.properties.ProcessVersionInfoInternalFileName),ProcessVersionInfoOriginalFileName = tostring(events.properties.ProcessVersionInfoOriginalFileName),ProcessVersionInfoFileDescription = tostring(events.properties.ProcessVersionInfoFileDescription),ProcessId = tolong(events.properties.ProcessId),ProcessCommandLine = tostring(events.properties.ProcessCommandLine),ProcessIntegrityLevel = tostring(events.properties.ProcessIntegrityLevel),ProcessTokenElevation = tostring(events.properties.ProcessTokenElevation),ProcessCreationTime = todatetime(events.properties.ProcessCreationTime),AccountDomain = tostring(events.properties.AccountDomain),AccountName = tostring(events.properties.AccountName),AccountSid = tostring(events.properties.AccountSid),AccountUpn = tostring(events.properties.AccountUpn),AccountObjectId = tostring(events.properties.AccountObjectId),LogonId = tolong(events.properties.LogonId),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessLogonId = tolong(events.properties.InitiatingProcessLogonId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessSignerType = tostring(events.properties.InitiatingProcessSignerType),InitiatingProcessSignatureStatus = tostring(events.properties.InitiatingProcessSignatureStatus),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }

.alter table DeviceProcessEvents policy update @'[{"Source": "DeviceProcessEventsRaw", "Query": "DeviceProcessEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceNetworkEventsRaw (records:dynamic)

.create-or-alter table DeviceNetworkEventsRaw ingestion json mapping 'DeviceNetworkEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceNetworkEventsRaw policy retention softdelete = 1d

.create table DeviceNetworkEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,RemoteIP:string,RemotePort:int,RemoteUrl:string,LocalIP:string,LocalPort:int,Protocol:string,LocalIPType:string,RemoteIPType:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentFileName:string,InitiatingProcessParentId:long,InitiatingProcessParentCreationTime:datetime,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)

.alter-merge table DeviceNetworkEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceNetworkEventsExpand {DeviceNetworkEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),RemoteIP = tostring(events.properties.RemoteIP),RemotePort = toint(events.properties.RemotePort),RemoteUrl = tostring(events.properties.RemoteUrl),LocalIP = tostring(events.properties.LocalIP),LocalPort = toint(events.properties.LocalPort),Protocol = tostring(events.properties.Protocol),LocalIPType = tostring(events.properties.LocalIPType),RemoteIPType = tostring(events.properties.RemoteIPType),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }

.alter table DeviceNetworkEvents policy update @'[{"Source": "DeviceNetworkEventsRaw", "Query": "DeviceNetworkEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceFileEventsRaw (records:dynamic)

.create-or-alter table DeviceFileEventsRaw ingestion json mapping 'DeviceFileEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceFileEventsRaw policy retention softdelete = 1d

.create table DeviceFileEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,MD5:string,FileOriginUrl:string,FileOriginReferrerUrl:string,FileOriginIP:string,PreviousFolderPath:string,PreviousFileName:string,FileSize:long,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessMD5:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessFolderPath:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,RequestProtocol:string,RequestSourceIP:string,RequestSourcePort:int,RequestAccountName:string,RequestAccountDomain:string,RequestAccountSid:string,ShareName:string,SensitivityLabel:string,SensitivitySubLabel:string,IsAzureInfoProtectionApplied:bool,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)

.alter-merge table DeviceFileEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceFileEventsExpand {DeviceFileEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),MD5 = tostring(events.properties.MD5),FileOriginUrl = tostring(events.properties.FileOriginUrl),FileOriginReferrerUrl = tostring(events.properties.FileOriginReferrerUrl),FileOriginIP = tostring(events.properties.FileOriginIP),PreviousFolderPath = tostring(events.properties.PreviousFolderPath),PreviousFileName = tostring(events.properties.PreviousFileName),FileSize = tolong(events.properties.FileSize),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),RequestProtocol = tostring(events.properties.RequestProtocol),RequestSourceIP = tostring(events.properties.RequestSourceIP),RequestSourcePort = toint(events.properties.RequestSourcePort),RequestAccountName = tostring(events.properties.RequestAccountName),RequestAccountDomain = tostring(events.properties.RequestAccountDomain),RequestAccountSid = tostring(events.properties.RequestAccountSid),ShareName = tostring(events.properties.ShareName),SensitivityLabel = tostring(events.properties.SensitivityLabel),SensitivitySubLabel = tostring(events.properties.SensitivitySubLabel),IsAzureInfoProtectionApplied = tobool(events.properties.IsAzureInfoProtectionApplied),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }

.alter table DeviceFileEvents policy update @'[{"Source": "DeviceFileEventsRaw", "Query": "DeviceFileEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceRegistryEventsRaw (records:dynamic)

.create-or-alter table DeviceRegistryEventsRaw ingestion json mapping 'DeviceRegistryEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceRegistryEventsRaw policy retention softdelete = 1d

.create table DeviceRegistryEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,RegistryKey:string,RegistryValueType:string,RegistryValueName:string,RegistryValueData:string,PreviousRegistryKey:string,PreviousRegistryValueName:string,PreviousRegistryValueData:string,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,ReportId:long,AppGuardContainerId:string)

.alter-merge table DeviceRegistryEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceRegistryEventsExpand {DeviceRegistryEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),RegistryKey = tostring(events.properties.RegistryKey),RegistryValueType = tostring(events.properties.RegistryValueType),RegistryValueName = tostring(events.properties.RegistryValueName),RegistryValueData = tostring(events.properties.RegistryValueData),PreviousRegistryKey = tostring(events.properties.PreviousRegistryKey),PreviousRegistryValueName = tostring(events.properties.PreviousRegistryValueName),PreviousRegistryValueData = tostring(events.properties.PreviousRegistryValueData),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId) }

.alter table DeviceRegistryEvents policy update @'[{"Source": "DeviceRegistryEventsRaw", "Query": "DeviceRegistryEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceLogonEventsRaw (records:dynamic)

.create-or-alter table DeviceLogonEventsRaw ingestion json mapping 'DeviceLogonEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceLogonEventsRaw policy retention softdelete = 1d

.create table DeviceLogonEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,LogonType:string,AccountDomain:string,AccountName:string,AccountSid:string,Protocol:string,FailureReason:string,IsLocalAdmin:bool,LogonId:long,RemoteDeviceName:string,RemoteIP:string,RemoteIPType:string,RemotePort:int,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)

.alter-merge table DeviceLogonEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceLogonEventsExpand {DeviceLogonEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),LogonType = tostring(events.properties.LogonType),AccountDomain = tostring(events.properties.AccountDomain),AccountName = tostring(events.properties.AccountName),AccountSid = tostring(events.properties.AccountSid),Protocol = tostring(events.properties.Protocol),FailureReason = tostring(events.properties.FailureReason),IsLocalAdmin = tobool(events.properties.IsLocalAdmin),LogonId = tolong(events.properties.LogonId),RemoteDeviceName = tostring(events.properties.RemoteDeviceName),RemoteIP = tostring(events.properties.RemoteIP),RemoteIPType = tostring(events.properties.RemoteIPType),RemotePort = toint(events.properties.RemotePort),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }

.alter table DeviceLogonEvents policy update @'[{"Source": "DeviceLogonEventsRaw", "Query": "DeviceLogonEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceEventsRaw (records:dynamic)

.create-or-alter table DeviceEventsRaw ingestion json mapping 'DeviceEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceEventsRaw policy retention softdelete = 1d

.create table DeviceEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,MD5:string,FileSize:long,AccountDomain:string,AccountName:string,AccountSid:string,RemoteUrl:string,RemoteDeviceName:string,ProcessId:long,ProcessCommandLine:string,ProcessCreationTime:datetime,ProcessTokenElevation:string,LogonId:long,RegistryKey:string,RegistryValueName:string,RegistryValueData:string,RemoteIP:string,RemotePort:int,LocalIP:string,LocalPort:int,FileOriginUrl:string,FileOriginIP:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessFolderPath:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,InitiatingProcessLogonId:long,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)

.alter-merge table DeviceEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceEventsExpand {DeviceEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),MD5 = tostring(events.properties.MD5),FileSize = tolong(events.properties.FileSize),AccountDomain = tostring(events.properties.AccountDomain),AccountName = tostring(events.properties.AccountName),AccountSid = tostring(events.properties.AccountSid),RemoteUrl = tostring(events.properties.RemoteUrl),RemoteDeviceName = tostring(events.properties.RemoteDeviceName),ProcessId = tolong(events.properties.ProcessId),ProcessCommandLine = tostring(events.properties.ProcessCommandLine),ProcessCreationTime = todatetime(events.properties.ProcessCreationTime),ProcessTokenElevation = tostring(events.properties.ProcessTokenElevation),LogonId = tolong(events.properties.LogonId),RegistryKey = tostring(events.properties.RegistryKey),RegistryValueName = tostring(events.properties.RegistryValueName),RegistryValueData = tostring(events.properties.RegistryValueData),RemoteIP = tostring(events.properties.RemoteIP),RemotePort = toint(events.properties.RemotePort),LocalIP = tostring(events.properties.LocalIP),LocalPort = toint(events.properties.LocalPort),FileOriginUrl = tostring(events.properties.FileOriginUrl),FileOriginIP = tostring(events.properties.FileOriginIP),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessLogonId = tolong(events.properties.InitiatingProcessLogonId),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }

.alter table DeviceEvents policy update @'[{"Source": "DeviceEventsRaw", "Query": "DeviceEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table DeviceFileCertificateInfoRaw (records:dynamic)

.create-or-alter table DeviceFileCertificateInfoRaw ingestion json mapping 'DeviceFileCertificateInfoRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceFileCertificateInfoRaw policy retention softdelete = 1d

.create table DeviceFileCertificateInfo (Timestamp:datetime,DeviceId:string,DeviceName:string,SHA1:string,IsSigned:bool,SignatureType:string,Signer:string,SignerHash:string,Issuer:string,IssuerHash:string,CertificateSerialNumber:string,CrlDistributionPointUrls:string,CertificateCreationTime:datetime,CertificateExpirationTime:datetime,CertificateCountersignatureTime:datetime,IsTrusted:bool,IsRootSignerMicrosoft:bool,ReportId:long)

.alter-merge table DeviceFileCertificateInfo policy retention softdelete = 365d recoverability = enabled

.create-or-alter function DeviceFileCertificateInfoExpand {DeviceFileCertificateInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),SHA1 = tostring(events.properties.SHA1),IsSigned = tobool(events.properties.IsSigned),SignatureType = tostring(events.properties.SignatureType),Signer = tostring(events.properties.Signer),SignerHash = tostring(events.properties.SignerHash),Issuer = tostring(events.properties.Issuer),IssuerHash = tostring(events.properties.IssuerHash),CertificateSerialNumber = tostring(events.properties.CertificateSerialNumber),CrlDistributionPointUrls = tostring(events.properties.CrlDistributionPointUrls),CertificateCreationTime = todatetime(events.properties.CertificateCreationTime),CertificateExpirationTime = todatetime(events.properties.CertificateExpirationTime),CertificateCountersignatureTime = todatetime(events.properties.CertificateCountersignatureTime),IsTrusted = tobool(events.properties.IsTrusted),IsRootSignerMicrosoft = tobool(events.properties.IsRootSignerMicrosoft),ReportId = tolong(events.properties.ReportId) }

.alter table DeviceFileCertificateInfo policy update @'[{"Source": "DeviceFileCertificateInfoRaw", "Query": "DeviceFileCertificateInfoExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table EmailAttachmentInfoRaw (records:dynamic)

.create-or-alter table EmailAttachmentInfoRaw ingestion json mapping 'EmailAttachmentInfoRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table EmailAttachmentInfoRaw policy retention softdelete = 1d

.create table EmailAttachmentInfo (Timestamp:datetime,NetworkMessageId:string,SenderFromAddress:string,SenderDisplayName:string,SenderObjectId:string,RecipientEmailAddress:string,RecipientObjectId:string,FileName:string,FileType:string,SHA256:string,FileSize:long,ThreatTypes:string,ThreatNames:string,DetectionMethods:string,ReportId:string)

.alter-merge table EmailAttachmentInfo policy retention softdelete = 365d recoverability = enabled

.create-or-alter function EmailAttachmentInfoExpand {EmailAttachmentInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),NetworkMessageId = tostring(events.properties.NetworkMessageId),SenderFromAddress = tostring(events.properties.SenderFromAddress),SenderDisplayName = tostring(events.properties.SenderDisplayName),SenderObjectId = tostring(events.properties.SenderObjectId),RecipientEmailAddress = tostring(events.properties.RecipientEmailAddress),RecipientObjectId = tostring(events.properties.RecipientObjectId),FileName = tostring(events.properties.FileName),FileType = tostring(events.properties.FileType),SHA256 = tostring(events.properties.SHA256),FileSize = tolong(events.properties.FileSize),ThreatTypes = tostring(events.properties.ThreatTypes),ThreatNames = tostring(events.properties.ThreatNames),DetectionMethods = tostring(events.properties.DetectionMethods),ReportId = tostring(events.properties.ReportId) }

.alter table EmailAttachmentInfo policy update @'[{"Source": "EmailAttachmentInfoRaw", "Query": "EmailAttachmentInfoExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table EmailEventsRaw (records:dynamic)

.create-or-alter table EmailEventsRaw ingestion json mapping 'EmailEventsRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table EmailEventsRaw policy retention softdelete = 1d

.create table EmailEvents (Timestamp:datetime,NetworkMessageId:string,InternetMessageId:string,SenderMailFromAddress:string,SenderFromAddress:string,SenderDisplayName:string,SenderObjectId:string,SenderMailFromDomain:string,SenderFromDomain:string,SenderIPv4:string,SenderIPv6:string,RecipientEmailAddress:string,RecipientObjectId:string,Subject:string,EmailClusterId:long,EmailDirection:string,DeliveryAction:string,DeliveryLocation:string,ThreatTypes:string,ThreatNames:string,DetectionMethods:string,ConfidenceLevel:string,BulkComplaintLevel:int,EmailAction:string,EmailActionPolicy:string,EmailActionPolicyGuid:string,AuthenticationDetails:string,AttachmentCount:int,UrlCount:int,EmailLanguage:string,Connectors:string,OrgLevelAction:string,OrgLevelPolicy:string,UserLevelAction:string,UserLevelPolicy:string,ReportId:string,AdditionalFields:string)

.alter-merge table EmailEvents policy retention softdelete = 365d recoverability = enabled

.create-or-alter function EmailEventsExpand {EmailEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),NetworkMessageId = tostring(events.properties.NetworkMessageId),InternetMessageId = tostring(events.properties.InternetMessageId),SenderMailFromAddress = tostring(events.properties.SenderMailFromAddress),SenderFromAddress = tostring(events.properties.SenderFromAddress),SenderDisplayName = tostring(events.properties.SenderDisplayName),SenderObjectId = tostring(events.properties.SenderObjectId),SenderMailFromDomain = tostring(events.properties.SenderMailFromDomain),SenderFromDomain = tostring(events.properties.SenderFromDomain),SenderIPv4 = tostring(events.properties.SenderIPv4),SenderIPv6 = tostring(events.properties.SenderIPv6),RecipientEmailAddress = tostring(events.properties.RecipientEmailAddress),RecipientObjectId = tostring(events.properties.RecipientObjectId),Subject = tostring(events.properties.Subject),EmailClusterId = tolong(events.properties.EmailClusterId),EmailDirection = tostring(events.properties.EmailDirection),DeliveryAction = tostring(events.properties.DeliveryAction),DeliveryLocation = tostring(events.properties.DeliveryLocation),ThreatTypes = tostring(events.properties.ThreatTypes),ThreatNames = tostring(events.properties.ThreatNames),DetectionMethods = tostring(events.properties.DetectionMethods),ConfidenceLevel = tostring(events.properties.ConfidenceLevel),BulkComplaintLevel = toint(events.properties.BulkComplaintLevel),EmailAction = tostring(events.properties.EmailAction),EmailActionPolicy = tostring(events.properties.EmailActionPolicy),EmailActionPolicyGuid = tostring(events.properties.EmailActionPolicyGuid),AuthenticationDetails = tostring(events.properties.AuthenticationDetails),AttachmentCount = toint(events.properties.AttachmentCount),UrlCount = toint(events.properties.UrlCount),EmailLanguage = tostring(events.properties.EmailLanguage),Connectors = tostring(events.properties.Connectors),OrgLevelAction = tostring(events.properties.OrgLevelAction),OrgLevelPolicy = tostring(events.properties.OrgLevelPolicy),UserLevelAction = tostring(events.properties.UserLevelAction),UserLevelPolicy = tostring(events.properties.UserLevelPolicy),ReportId = tostring(events.properties.ReportId),AdditionalFields = tostring(events.properties.AdditionalFields) }

.alter table EmailEvents policy update @'[{"Source": "EmailEventsRaw", "Query": "EmailEventsExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.create table EmailUrlInfoRaw (records:dynamic)

.create-or-alter table EmailUrlInfoRaw ingestion json mapping 'EmailUrlInfoRawMapping' '[{"Column":"records","Properties":{"path":"$.records"}}]'

.alter-merge table EmailUrlInfoRaw policy retention softdelete = 1d

.create table EmailUrlInfo (Timestamp:datetime,NetworkMessageId:string,Url:string,UrlDomain:string,UrlLocation:string,ReportId:string)

.alter-merge table EmailUrlInfo policy retention softdelete = 365d recoverability = enabled

.create-or-alter function EmailUrlInfoExpand {EmailUrlInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),NetworkMessageId = tostring(events.properties.NetworkMessageId),Url = tostring(events.properties.Url),UrlDomain = tostring(events.properties.UrlDomain),UrlLocation = tostring(events.properties.UrlLocation),ReportId = tostring(events.properties.ReportId) }

.alter table EmailUrlInfo policy update @'[{"Source": "EmailUrlInfoRaw", "Query": "EmailUrlInfoExpand()", "IsEnabled": "True", "IsTransactional": true}]'

.add database ['m365d-archive'] viewers ('aadgroup=Bitdefend Admins;bitdefend.eu')


