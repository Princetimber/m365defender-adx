{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adxClusterName": {
            "value": "adx-defender-archive"
        },
        "tier": {
            "value": "Standard"
        },
        "computeType": {
            "value": "Standard_E2a_v4"
        },
        "capacity": {
            "value": 2
        },
        "autoScaleEnabled": {
            "value": false
        },
        "autoScaleLimit": {
            "value": 5
        },
        "adxDatabaseName": {
            "value": "m365d-archive"
        },
        "adxScript": {
            "value": "\n.create table AlertInfoRaw (records:dynamic)\n\n.create table AlertInfoRaw ingestion json mapping 'AlertInfoRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table AlertInfoRaw policy retention softdelete = 1d\n\n.create table AlertInfo (Timestamp:datetime,AlertId:string,Title:string,Category:string,Severity:string,ServiceSource:string,DetectionSource:string,AttackTechniques:string)\n\n.alter-merge table AlertInfo policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function AlertInfoExpand {AlertInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),AlertId = tostring(events.properties.AlertId),Title = tostring(events.properties.Title),Category = tostring(events.properties.Category),Severity = tostring(events.properties.Severity),ServiceSource = tostring(events.properties.ServiceSource),DetectionSource = tostring(events.properties.DetectionSource),AttackTechniques = tostring(events.properties.AttackTechniques) }\n\n.alter table AlertInfo policy update @'[{\"Source\": \"AlertInfoRaw\", \"Query\": \"AlertInfoExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table AlertEvidenceRaw (records:dynamic)\n\n.create table AlertEvidenceRaw ingestion json mapping 'AlertEvidenceRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table AlertEvidenceRaw policy retention softdelete = 1d\n\n.create table AlertEvidence (Timestamp:datetime,AlertId:string,Title:string,Categories:string,AttackTechniques:string,ServiceSource:string,DetectionSource:string,EntityType:string,EvidenceRole:string,EvidenceDirection:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,FileSize:long,ThreatFamily:string,RemoteIP:string,RemoteUrl:string,AccountName:string,AccountDomain:string,AccountSid:string,AccountObjectId:string,AccountUpn:string,DeviceId:string,DeviceName:string,LocalIP:string,NetworkMessageId:string,EmailSubject:string,Application:string,ApplicationId:int,OAuthApplicationId:string,ProcessCommandLine:string,RegistryKey:string,RegistryValueName:string,RegistryValueData:string,AdditionalFields:string)\n\n.alter-merge table AlertEvidence policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function AlertEvidenceExpand {AlertEvidenceRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),AlertId = tostring(events.properties.AlertId),Title = tostring(events.properties.Title),Categories = tostring(events.properties.Categories),AttackTechniques = tostring(events.properties.AttackTechniques),ServiceSource = tostring(events.properties.ServiceSource),DetectionSource = tostring(events.properties.DetectionSource),EntityType = tostring(events.properties.EntityType),EvidenceRole = tostring(events.properties.EvidenceRole),EvidenceDirection = tostring(events.properties.EvidenceDirection),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),FileSize = tolong(events.properties.FileSize),ThreatFamily = tostring(events.properties.ThreatFamily),RemoteIP = tostring(events.properties.RemoteIP),RemoteUrl = tostring(events.properties.RemoteUrl),AccountName = tostring(events.properties.AccountName),AccountDomain = tostring(events.properties.AccountDomain),AccountSid = tostring(events.properties.AccountSid),AccountObjectId = tostring(events.properties.AccountObjectId),AccountUpn = tostring(events.properties.AccountUpn),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),LocalIP = tostring(events.properties.LocalIP),NetworkMessageId = tostring(events.properties.NetworkMessageId),EmailSubject = tostring(events.properties.EmailSubject),Application = tostring(events.properties.Application),ApplicationId = toint(events.properties.ApplicationId),OAuthApplicationId = tostring(events.properties.OAuthApplicationId),ProcessCommandLine = tostring(events.properties.ProcessCommandLine),RegistryKey = tostring(events.properties.RegistryKey),RegistryValueName = tostring(events.properties.RegistryValueName),RegistryValueData = tostring(events.properties.RegistryValueData),AdditionalFields = tostring(events.properties.AdditionalFields) }\n\n.alter table AlertEvidence policy update @'[{\"Source\": \"AlertEvidenceRaw\", \"Query\": \"AlertEvidenceExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceInfoRaw (records:dynamic)\n\n.create table DeviceInfoRaw ingestion json mapping 'DeviceInfoRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceInfoRaw policy retention softdelete = 1d\n\n.create table DeviceInfo (Timestamp:datetime,DeviceId:string,DeviceName:string,ClientVersion:string,PublicIP:string,OSArchitecture:string,OSPlatform:string,OSBuild:long,IsAzureADJoined:bool,JoinType:string,AadDeviceId:string,LoggedOnUsers:string,RegistryDeviceTag:string,OSVersion:string,MachineGroup:string,ReportId:long,OnboardingStatus:string,AdditionalFields:string,DeviceCategory:string,DeviceType:string,DeviceSubtype:string,Model:string,Vendor:string,OSDistribution:string,OSVersionInfo:string,MergedDeviceIds:string,MergedToDeviceId:string,SensorHealthState:string,IsExcluded:bool,ExclusionReason:string,ExposureLevel:string,AssetValue:string)\n\n.alter-merge table DeviceInfo policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceInfoExpand {DeviceInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ClientVersion = tostring(events.properties.ClientVersion),PublicIP = tostring(events.properties.PublicIP),OSArchitecture = tostring(events.properties.OSArchitecture),OSPlatform = tostring(events.properties.OSPlatform),OSBuild = tolong(events.properties.OSBuild),IsAzureADJoined = tobool(events.properties.IsAzureADJoined),JoinType = tostring(events.properties.JoinType),AadDeviceId = tostring(events.properties.AadDeviceId),LoggedOnUsers = tostring(events.properties.LoggedOnUsers),RegistryDeviceTag = tostring(events.properties.RegistryDeviceTag),OSVersion = tostring(events.properties.OSVersion),MachineGroup = tostring(events.properties.MachineGroup),ReportId = tolong(events.properties.ReportId),OnboardingStatus = tostring(events.properties.OnboardingStatus),AdditionalFields = tostring(events.properties.AdditionalFields),DeviceCategory = tostring(events.properties.DeviceCategory),DeviceType = tostring(events.properties.DeviceType),DeviceSubtype = tostring(events.properties.DeviceSubtype),Model = tostring(events.properties.Model),Vendor = tostring(events.properties.Vendor),OSDistribution = tostring(events.properties.OSDistribution),OSVersionInfo = tostring(events.properties.OSVersionInfo),MergedDeviceIds = tostring(events.properties.MergedDeviceIds),MergedToDeviceId = tostring(events.properties.MergedToDeviceId),SensorHealthState = tostring(events.properties.SensorHealthState),IsExcluded = tobool(events.properties.IsExcluded),ExclusionReason = tostring(events.properties.ExclusionReason),ExposureLevel = tostring(events.properties.ExposureLevel),AssetValue = tostring(events.properties.AssetValue) }\n\n.alter table DeviceInfo policy update @'[{\"Source\": \"DeviceInfoRaw\", \"Query\": \"DeviceInfoExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceNetworkInfoRaw (records:dynamic)\n\n.create table DeviceNetworkInfoRaw ingestion json mapping 'DeviceNetworkInfoRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceNetworkInfoRaw policy retention softdelete = 1d\n\n.create table DeviceNetworkInfo (Timestamp:datetime,DeviceId:string,DeviceName:string,NetworkAdapterName:string,MacAddress:string,NetworkAdapterType:string,NetworkAdapterStatus:string,TunnelType:string,ConnectedNetworks:string,DnsAddresses:string,IPv4Dhcp:string,IPv6Dhcp:string,DefaultGateways:string,IPAddresses:string,ReportId:long,NetworkAdapterVendor:string)\n\n.alter-merge table DeviceNetworkInfo policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceNetworkInfoExpand {DeviceNetworkInfoRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),NetworkAdapterName = tostring(events.properties.NetworkAdapterName),MacAddress = tostring(events.properties.MacAddress),NetworkAdapterType = tostring(events.properties.NetworkAdapterType),NetworkAdapterStatus = tostring(events.properties.NetworkAdapterStatus),TunnelType = tostring(events.properties.TunnelType),ConnectedNetworks = tostring(events.properties.ConnectedNetworks),DnsAddresses = tostring(events.properties.DnsAddresses),IPv4Dhcp = tostring(events.properties.IPv4Dhcp),IPv6Dhcp = tostring(events.properties.IPv6Dhcp),DefaultGateways = tostring(events.properties.DefaultGateways),IPAddresses = tostring(events.properties.IPAddresses),ReportId = tolong(events.properties.ReportId),NetworkAdapterVendor = tostring(events.properties.NetworkAdapterVendor) }\n\n.alter table DeviceNetworkInfo policy update @'[{\"Source\": \"DeviceNetworkInfoRaw\", \"Query\": \"DeviceNetworkInfoExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceProcessEventsRaw (records:dynamic)\n\n.create table DeviceProcessEventsRaw ingestion json mapping 'DeviceProcessEventsRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceProcessEventsRaw policy retention softdelete = 1d\n\n.create table DeviceProcessEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,MD5:string,FileSize:long,ProcessVersionInfoCompanyName:string,ProcessVersionInfoProductName:string,ProcessVersionInfoProductVersion:string,ProcessVersionInfoInternalFileName:string,ProcessVersionInfoOriginalFileName:string,ProcessVersionInfoFileDescription:string,ProcessId:long,ProcessCommandLine:string,ProcessIntegrityLevel:string,ProcessTokenElevation:string,ProcessCreationTime:datetime,AccountDomain:string,AccountName:string,AccountSid:string,AccountUpn:string,AccountObjectId:string,LogonId:long,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessLogonId:long,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,InitiatingProcessSignerType:string,InitiatingProcessSignatureStatus:string,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)\n\n.alter-merge table DeviceProcessEvents policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceProcessEventsExpand {DeviceProcessEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),MD5 = tostring(events.properties.MD5),FileSize = tolong(events.properties.FileSize),ProcessVersionInfoCompanyName = tostring(events.properties.ProcessVersionInfoCompanyName),ProcessVersionInfoProductName = tostring(events.properties.ProcessVersionInfoProductName),ProcessVersionInfoProductVersion = tostring(events.properties.ProcessVersionInfoProductVersion),ProcessVersionInfoInternalFileName = tostring(events.properties.ProcessVersionInfoInternalFileName),ProcessVersionInfoOriginalFileName = tostring(events.properties.ProcessVersionInfoOriginalFileName),ProcessVersionInfoFileDescription = tostring(events.properties.ProcessVersionInfoFileDescription),ProcessId = tolong(events.properties.ProcessId),ProcessCommandLine = tostring(events.properties.ProcessCommandLine),ProcessIntegrityLevel = tostring(events.properties.ProcessIntegrityLevel),ProcessTokenElevation = tostring(events.properties.ProcessTokenElevation),ProcessCreationTime = todatetime(events.properties.ProcessCreationTime),AccountDomain = tostring(events.properties.AccountDomain),AccountName = tostring(events.properties.AccountName),AccountSid = tostring(events.properties.AccountSid),AccountUpn = tostring(events.properties.AccountUpn),AccountObjectId = tostring(events.properties.AccountObjectId),LogonId = tolong(events.properties.LogonId),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessLogonId = tolong(events.properties.InitiatingProcessLogonId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessSignerType = tostring(events.properties.InitiatingProcessSignerType),InitiatingProcessSignatureStatus = tostring(events.properties.InitiatingProcessSignatureStatus),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }\n\n.alter table DeviceProcessEvents policy update @'[{\"Source\": \"DeviceProcessEventsRaw\", \"Query\": \"DeviceProcessEventsExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceNetworkEventsRaw (records:dynamic)\n\n.create table DeviceNetworkEventsRaw ingestion json mapping 'DeviceNetworkEventsRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceNetworkEventsRaw policy retention softdelete = 1d\n\n.create table DeviceNetworkEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,RemoteIP:string,RemotePort:int,RemoteUrl:string,LocalIP:string,LocalPort:int,Protocol:string,LocalIPType:string,RemoteIPType:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentFileName:string,InitiatingProcessParentId:long,InitiatingProcessParentCreationTime:datetime,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)\n\n.alter-merge table DeviceNetworkEvents policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceNetworkEventsExpand {DeviceNetworkEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),RemoteIP = tostring(events.properties.RemoteIP),RemotePort = toint(events.properties.RemotePort),RemoteUrl = tostring(events.properties.RemoteUrl),LocalIP = tostring(events.properties.LocalIP),LocalPort = toint(events.properties.LocalPort),Protocol = tostring(events.properties.Protocol),LocalIPType = tostring(events.properties.LocalIPType),RemoteIPType = tostring(events.properties.RemoteIPType),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }\n\n.alter table DeviceNetworkEvents policy update @'[{\"Source\": \"DeviceNetworkEventsRaw\", \"Query\": \"DeviceNetworkEventsExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceFileEventsRaw (records:dynamic)\n\n.create table DeviceFileEventsRaw ingestion json mapping 'DeviceFileEventsRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceFileEventsRaw policy retention softdelete = 1d\n\n.create table DeviceFileEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,MD5:string,FileOriginUrl:string,FileOriginReferrerUrl:string,FileOriginIP:string,PreviousFolderPath:string,PreviousFileName:string,FileSize:long,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessMD5:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessFolderPath:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,RequestProtocol:string,RequestSourceIP:string,RequestSourcePort:int,RequestAccountName:string,RequestAccountDomain:string,RequestAccountSid:string,ShareName:string,SensitivityLabel:string,SensitivitySubLabel:string,IsAzureInfoProtectionApplied:bool,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)\n\n.alter-merge table DeviceFileEvents policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceFileEventsExpand {DeviceFileEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),MD5 = tostring(events.properties.MD5),FileOriginUrl = tostring(events.properties.FileOriginUrl),FileOriginReferrerUrl = tostring(events.properties.FileOriginReferrerUrl),FileOriginIP = tostring(events.properties.FileOriginIP),PreviousFolderPath = tostring(events.properties.PreviousFolderPath),PreviousFileName = tostring(events.properties.PreviousFileName),FileSize = tolong(events.properties.FileSize),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),RequestProtocol = tostring(events.properties.RequestProtocol),RequestSourceIP = tostring(events.properties.RequestSourceIP),RequestSourcePort = toint(events.properties.RequestSourcePort),RequestAccountName = tostring(events.properties.RequestAccountName),RequestAccountDomain = tostring(events.properties.RequestAccountDomain),RequestAccountSid = tostring(events.properties.RequestAccountSid),ShareName = tostring(events.properties.ShareName),SensitivityLabel = tostring(events.properties.SensitivityLabel),SensitivitySubLabel = tostring(events.properties.SensitivitySubLabel),IsAzureInfoProtectionApplied = tobool(events.properties.IsAzureInfoProtectionApplied),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }\n\n.alter table DeviceFileEvents policy update @'[{\"Source\": \"DeviceFileEventsRaw\", \"Query\": \"DeviceFileEventsExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceRegistryEventsRaw (records:dynamic)\n\n.create table DeviceRegistryEventsRaw ingestion json mapping 'DeviceRegistryEventsRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceRegistryEventsRaw policy retention softdelete = 1d\n\n.create table DeviceRegistryEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,RegistryKey:string,RegistryValueType:string,RegistryValueName:string,RegistryValueData:string,PreviousRegistryKey:string,PreviousRegistryValueName:string,PreviousRegistryValueData:string,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,ReportId:long,AppGuardContainerId:string)\n\n.alter-merge table DeviceRegistryEvents policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceRegistryEventsExpand {DeviceRegistryEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),RegistryKey = tostring(events.properties.RegistryKey),RegistryValueType = tostring(events.properties.RegistryValueType),RegistryValueName = tostring(events.properties.RegistryValueName),RegistryValueData = tostring(events.properties.RegistryValueData),PreviousRegistryKey = tostring(events.properties.PreviousRegistryKey),PreviousRegistryValueName = tostring(events.properties.PreviousRegistryValueName),PreviousRegistryValueData = tostring(events.properties.PreviousRegistryValueData),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId) }\n\n.alter table DeviceRegistryEvents policy update @'[{\"Source\": \"DeviceRegistryEventsRaw\", \"Query\": \"DeviceRegistryEventsExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceLogonEventsRaw (records:dynamic)\n\n.create table DeviceLogonEventsRaw ingestion json mapping 'DeviceLogonEventsRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceLogonEventsRaw policy retention softdelete = 1d\n\n.create table DeviceLogonEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,LogonType:string,AccountDomain:string,AccountName:string,AccountSid:string,Protocol:string,FailureReason:string,IsLocalAdmin:bool,LogonId:long,RemoteDeviceName:string,RemoteIP:string,RemoteIPType:string,RemotePort:int,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,ReportId:long,AppGuardContainerId:string,AdditionalFields:string)\n\n.alter-merge table DeviceLogonEvents policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceLogonEventsExpand {DeviceLogonEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),LogonType = tostring(events.properties.LogonType),AccountDomain = tostring(events.properties.AccountDomain),AccountName = tostring(events.properties.AccountName),AccountSid = tostring(events.properties.AccountSid),Protocol = tostring(events.properties.Protocol),FailureReason = tostring(events.properties.FailureReason),IsLocalAdmin = tobool(events.properties.IsLocalAdmin),LogonId = tolong(events.properties.LogonId),RemoteDeviceName = tostring(events.properties.RemoteDeviceName),RemoteIP = tostring(events.properties.RemoteIP),RemoteIPType = tostring(events.properties.RemoteIPType),RemotePort = toint(events.properties.RemotePort),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId),AdditionalFields = tostring(events.properties.AdditionalFields) }\n\n.alter table DeviceLogonEvents policy update @'[{\"Source\": \"DeviceLogonEventsRaw\", \"Query\": \"DeviceLogonEventsExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n.create table DeviceImageLoadEventsRaw (records:dynamic)\n\n.create table DeviceImageLoadEventsRaw ingestion json mapping 'DeviceImageLoadEventsRawMapping' '[{\"Column\":\"records\",\"Properties\":{\"path\":\"$.records\"}}]'\n\n.alter-merge table DeviceImageLoadEventsRaw policy retention softdelete = 1d\n\n.create table DeviceImageLoadEvents (Timestamp:datetime,DeviceId:string,DeviceName:string,ActionType:string,FileName:string,FolderPath:string,SHA1:string,SHA256:string,MD5:string,FileSize:long,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessAccountObjectId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessTokenElevation:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessMD5:string,InitiatingProcessFileName:string,InitiatingProcessFileSize:long,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessId:long,InitiatingProcessCommandLine:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFolderPath:string,InitiatingProcessParentId:long,InitiatingProcessParentFileName:string,InitiatingProcessParentCreationTime:datetime,ReportId:long,AppGuardContainerId:string)\n\n.alter-merge table DeviceImageLoadEvents policy retention softdelete = 365d recoverability = enabled\n\n.create-or-alter function DeviceImageLoadEventsExpand {DeviceImageLoadEventsRaw | mv-expand events = records | project Timestamp = todatetime(events.properties.Timestamp),DeviceId = tostring(events.properties.DeviceId),DeviceName = tostring(events.properties.DeviceName),ActionType = tostring(events.properties.ActionType),FileName = tostring(events.properties.FileName),FolderPath = tostring(events.properties.FolderPath),SHA1 = tostring(events.properties.SHA1),SHA256 = tostring(events.properties.SHA256),MD5 = tostring(events.properties.MD5),FileSize = tolong(events.properties.FileSize),InitiatingProcessAccountDomain = tostring(events.properties.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.properties.InitiatingProcessAccountName),InitiatingProcessAccountSid = tostring(events.properties.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.properties.InitiatingProcessAccountUpn),InitiatingProcessAccountObjectId = tostring(events.properties.InitiatingProcessAccountObjectId),InitiatingProcessIntegrityLevel = tostring(events.properties.InitiatingProcessIntegrityLevel),InitiatingProcessTokenElevation = tostring(events.properties.InitiatingProcessTokenElevation),InitiatingProcessSHA1 = tostring(events.properties.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.properties.InitiatingProcessSHA256),InitiatingProcessMD5 = tostring(events.properties.InitiatingProcessMD5),InitiatingProcessFileName = tostring(events.properties.InitiatingProcessFileName),InitiatingProcessFileSize = tolong(events.properties.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.properties.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.properties.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.properties.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.properties.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.properties.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.properties.InitiatingProcessVersionInfoFileDescription),InitiatingProcessId = tolong(events.properties.InitiatingProcessId),InitiatingProcessCommandLine = tostring(events.properties.InitiatingProcessCommandLine),InitiatingProcessCreationTime = todatetime(events.properties.InitiatingProcessCreationTime),InitiatingProcessFolderPath = tostring(events.properties.InitiatingProcessFolderPath),InitiatingProcessParentId = tolong(events.properties.InitiatingProcessParentId),InitiatingProcessParentFileName = tostring(events.properties.InitiatingProcessParentFileName),InitiatingProcessParentCreationTime = todatetime(events.properties.InitiatingProcessParentCreationTime),ReportId = tolong(events.properties.ReportId),AppGuardContainerId = tostring(events.properties.AppGuardContainerId) }\n\n.alter table DeviceImageLoadEvents policy update @'[{\"Source\": \"DeviceImageLoadEventsRaw\", \"Query\": \"DeviceImageLoadEventsExpand()\", \"IsEnabled\": \"True\", \"IsTransactional\": true}]'\n\n"
        },
        "eventHubNamespaceName": {
            "value": "eh-defender-archive-01"
        },
        "tableNames": {
            "value": [
                "AlertInfo",
                "AlertEvidence",
                "DeviceInfo",
                "DeviceNetworkInfo",
                "DeviceProcessEvents",
                "DeviceNetworkEvents",
                "DeviceFileEvents",
                "DeviceRegistryEvents",
                "DeviceLogonEvents",
                "DeviceImageLoadEvents"
            ]
        }
    }
}